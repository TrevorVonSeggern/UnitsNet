//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyUnit.extra.cs files to add code to generated quantities.
//     Add Extensions\MyUnitExtensions.cs to decorate quantities with new behavior.
//     Add UnitDefinitions\MyUnit.json and run GeneratUnits.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright (c) 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com).
// https://github.com/angularsen/UnitsNet
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

using System;
using UnitsNet.InternalHelpers.Calculators;

// Windows Runtime Component does not support extension methods and method overloads: https://msdn.microsoft.com/en-us/library/br230301.aspx
#if !WINDOWS_UWP
namespace UnitsNet.Extensions.NumberToMassMomentOfInertia
{
    public static class NumberToMassMomentOfInertiaExtensions
    {
        #region GramSquareCentimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareCentimeters(double)"/>
        public static MassMomentOfInertia GramSquareCentimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareCentimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareCentimeters(double)"/>
        public static MassMomentOfInertia GramSquareCentimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareCentimeters(double)"/>
        public static MassMomentOfInertia GramSquareCentimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareCentimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareCentimeters(double)"/>
        public static MassMomentOfInertia GramSquareCentimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareCentimeters(double)"/>
        public static MassMomentOfInertia GramSquareCentimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareCentimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region GramSquareDecimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareDecimeters(double)"/>
        public static MassMomentOfInertia GramSquareDecimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareDecimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareDecimeters(double)"/>
        public static MassMomentOfInertia GramSquareDecimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareDecimeters(double)"/>
        public static MassMomentOfInertia GramSquareDecimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareDecimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareDecimeters(double)"/>
        public static MassMomentOfInertia GramSquareDecimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareDecimeters(double)"/>
        public static MassMomentOfInertia GramSquareDecimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareDecimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region GramSquareMeter

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMeters(double)"/>
        public static MassMomentOfInertia GramSquareMeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareMeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMeters(double)"/>
        public static MassMomentOfInertia GramSquareMeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMeters(double)"/>
        public static MassMomentOfInertia GramSquareMeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareMeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMeters(double)"/>
        public static MassMomentOfInertia GramSquareMeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMeters(double)"/>
        public static MassMomentOfInertia GramSquareMeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareMeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region GramSquareMillimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMillimeters(double)"/>
        public static MassMomentOfInertia GramSquareMillimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareMillimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMillimeters(double)"/>
        public static MassMomentOfInertia GramSquareMillimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareMillimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMillimeters(double)"/>
        public static MassMomentOfInertia GramSquareMillimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareMillimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMillimeters(double)"/>
        public static MassMomentOfInertia GramSquareMillimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareMillimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromGramSquareMillimeters(double)"/>
        public static MassMomentOfInertia GramSquareMillimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromGramSquareMillimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilogramSquareCentimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareCentimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareCentimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareCentimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareCentimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareCentimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareCentimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareCentimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareCentimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareCentimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareCentimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareCentimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareCentimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareCentimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilogramSquareDecimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareDecimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareDecimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareDecimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareDecimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareDecimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareDecimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareDecimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareDecimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareDecimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareDecimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareDecimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareDecimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareDecimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilogramSquareMeter

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMeters(double)"/>
        public static MassMomentOfInertia KilogramSquareMeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareMeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMeters(double)"/>
        public static MassMomentOfInertia KilogramSquareMeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMeters(double)"/>
        public static MassMomentOfInertia KilogramSquareMeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareMeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMeters(double)"/>
        public static MassMomentOfInertia KilogramSquareMeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMeters(double)"/>
        public static MassMomentOfInertia KilogramSquareMeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareMeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilogramSquareMillimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMillimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareMillimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareMillimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMillimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareMillimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareMillimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMillimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareMillimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareMillimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMillimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareMillimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareMillimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilogramSquareMillimeters(double)"/>
        public static MassMomentOfInertia KilogramSquareMillimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilogramSquareMillimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilotonneSquareCentimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareCentimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareCentimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareCentimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareCentimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareCentimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareCentimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareCentimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareCentimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilotonneSquareDecimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareDecimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareDecimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareDecimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareDecimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareDecimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareDecimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareDecimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareDecimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilotonneSquareMeter

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareMeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareMeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareMeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareMeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareMeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareMeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareMeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareMeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilotonneSquareMilimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareMilimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareMilimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareMilimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareMilimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareMilimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareMilimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareMilimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareMilimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromKilotonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia KilotonneSquareMilimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromKilotonneSquareMilimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region MegatonneSquareCentimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareCentimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareCentimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareCentimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareCentimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareCentimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareCentimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareCentimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareCentimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region MegatonneSquareDecimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareDecimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareDecimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareDecimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareDecimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareDecimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareDecimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareDecimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareDecimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region MegatonneSquareMeter

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareMeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareMeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareMeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareMeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareMeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareMeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareMeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareMeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region MegatonneSquareMilimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareMilimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareMilimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareMilimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareMilimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareMilimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareMilimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareMilimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareMilimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMegatonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia MegatonneSquareMilimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromMegatonneSquareMilimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region MilligramSquareCentimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareCentimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareCentimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareCentimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareCentimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareCentimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareCentimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareCentimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareCentimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareCentimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareCentimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareCentimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareCentimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareCentimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region MilligramSquareDecimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareDecimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareDecimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareDecimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareDecimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareDecimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareDecimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareDecimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareDecimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareDecimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareDecimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareDecimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareDecimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareDecimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region MilligramSquareMeter

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMeters(double)"/>
        public static MassMomentOfInertia MilligramSquareMeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareMeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMeters(double)"/>
        public static MassMomentOfInertia MilligramSquareMeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMeters(double)"/>
        public static MassMomentOfInertia MilligramSquareMeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareMeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMeters(double)"/>
        public static MassMomentOfInertia MilligramSquareMeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMeters(double)"/>
        public static MassMomentOfInertia MilligramSquareMeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareMeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region MilligramSquareMillimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMillimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareMillimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareMillimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMillimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareMillimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareMillimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMillimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareMillimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareMillimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMillimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareMillimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareMillimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromMilligramSquareMillimeters(double)"/>
        public static MassMomentOfInertia MilligramSquareMillimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromMilligramSquareMillimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region PoundSquareFoot

        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareFeet(double)"/>
        public static MassMomentOfInertia PoundSquareFeet(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromPoundSquareFeet(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareFeet(double)"/>
        public static MassMomentOfInertia PoundSquareFeet(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromPoundSquareFeet(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareFeet(double)"/>
        public static MassMomentOfInertia PoundSquareFeet(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromPoundSquareFeet(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareFeet(double)"/>
        public static MassMomentOfInertia PoundSquareFeet(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromPoundSquareFeet(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareFeet(double)"/>
        public static MassMomentOfInertia PoundSquareFeet(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromPoundSquareFeet(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region PoundSquareInch

        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareInches(double)"/>
        public static MassMomentOfInertia PoundSquareInches(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromPoundSquareInches(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareInches(double)"/>
        public static MassMomentOfInertia PoundSquareInches(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromPoundSquareInches(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareInches(double)"/>
        public static MassMomentOfInertia PoundSquareInches(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromPoundSquareInches(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareInches(double)"/>
        public static MassMomentOfInertia PoundSquareInches(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromPoundSquareInches(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromPoundSquareInches(double)"/>
        public static MassMomentOfInertia PoundSquareInches(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromPoundSquareInches(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region TonneSquareCentimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia TonneSquareCentimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareCentimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia TonneSquareCentimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia TonneSquareCentimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareCentimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia TonneSquareCentimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareCentimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareCentimeters(double)"/>
        public static MassMomentOfInertia TonneSquareCentimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareCentimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region TonneSquareDecimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia TonneSquareDecimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareDecimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia TonneSquareDecimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia TonneSquareDecimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareDecimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia TonneSquareDecimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareDecimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareDecimeters(double)"/>
        public static MassMomentOfInertia TonneSquareDecimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareDecimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region TonneSquareMeter

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMeters(double)"/>
        public static MassMomentOfInertia TonneSquareMeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareMeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMeters(double)"/>
        public static MassMomentOfInertia TonneSquareMeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMeters(double)"/>
        public static MassMomentOfInertia TonneSquareMeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareMeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMeters(double)"/>
        public static MassMomentOfInertia TonneSquareMeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareMeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMeters(double)"/>
        public static MassMomentOfInertia TonneSquareMeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareMeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region TonneSquareMilimeter

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia TonneSquareMilimeters(this int value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareMilimeters(value);
	
        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia TonneSquareMilimeters(this long value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareMilimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia TonneSquareMilimeters(this double value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareMilimeters(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia TonneSquareMilimeters(this float value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareMilimeters(value);

        /// <inheritdoc cref="MassMomentOfInertia.FromTonneSquareMilimeters(double)"/>
        public static MassMomentOfInertia TonneSquareMilimeters(this decimal value) => (MassMomentOfInertia)MassMomentOfInertia.FromTonneSquareMilimeters(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

    }
}
#endif
