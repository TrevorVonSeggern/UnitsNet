//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyUnit.extra.cs files to add code to generated quantities.
//     Add Extensions\MyUnitExtensions.cs to decorate quantities with new behavior.
//     Add UnitDefinitions\MyUnit.json and run GeneratUnits.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright (c) 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com).
// https://github.com/angularsen/UnitsNet
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

using System;
using UnitsNet.InternalHelpers.Calculators;

// Windows Runtime Component does not support extension methods and method overloads: https://msdn.microsoft.com/en-us/library/br230301.aspx
#if !WINDOWS_UWP
namespace UnitsNet.Extensions.NumberToSpecificWeight
{
    public static class NumberToSpecificWeightExtensions
    {
        #region KilogramForcePerCubicCentimeter

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicCentimeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicCentimeter(this int value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicCentimeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicCentimeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicCentimeter(this long value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicCentimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicCentimeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicCentimeter(this double value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicCentimeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicCentimeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicCentimeter(this float value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicCentimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicCentimeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicCentimeter(this decimal value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicCentimeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilogramForcePerCubicMeter

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicMeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicMeter(this int value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicMeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicMeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicMeter(this long value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicMeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicMeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicMeter(this double value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicMeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicMeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicMeter(this float value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicMeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicMeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicMeter(this decimal value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicMeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilogramForcePerCubicMillimeter

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicMillimeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicMillimeter(this int value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicMillimeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicMillimeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicMillimeter(this long value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicMillimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicMillimeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicMillimeter(this double value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicMillimeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicMillimeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicMillimeter(this float value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicMillimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilogramsForcePerCubicMillimeter(double)"/>
        public static SpecificWeight KilogramsForcePerCubicMillimeter(this decimal value) => (SpecificWeight)SpecificWeight.FromKilogramsForcePerCubicMillimeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilonewtonPerCubicCentimeter

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicCentimeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicCentimeter(this int value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicCentimeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicCentimeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicCentimeter(this long value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicCentimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicCentimeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicCentimeter(this double value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicCentimeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicCentimeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicCentimeter(this float value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicCentimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicCentimeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicCentimeter(this decimal value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicCentimeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilonewtonPerCubicMeter

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicMeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicMeter(this int value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicMeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicMeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicMeter(this long value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicMeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicMeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicMeter(this double value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicMeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicMeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicMeter(this float value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicMeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicMeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicMeter(this decimal value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicMeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilonewtonPerCubicMillimeter

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicMillimeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicMillimeter(this int value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicMillimeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicMillimeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicMillimeter(this long value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicMillimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicMillimeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicMillimeter(this double value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicMillimeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicMillimeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicMillimeter(this float value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicMillimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromKilonewtonsPerCubicMillimeter(double)"/>
        public static SpecificWeight KilonewtonsPerCubicMillimeter(this decimal value) => (SpecificWeight)SpecificWeight.FromKilonewtonsPerCubicMillimeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilopoundForcePerCubicFoot

        /// <inheritdoc cref="SpecificWeight.FromKilopoundsForcePerCubicFoot(double)"/>
        public static SpecificWeight KilopoundsForcePerCubicFoot(this int value) => (SpecificWeight)SpecificWeight.FromKilopoundsForcePerCubicFoot(value);
	
        /// <inheritdoc cref="SpecificWeight.FromKilopoundsForcePerCubicFoot(double)"/>
        public static SpecificWeight KilopoundsForcePerCubicFoot(this long value) => (SpecificWeight)SpecificWeight.FromKilopoundsForcePerCubicFoot(value);

        /// <inheritdoc cref="SpecificWeight.FromKilopoundsForcePerCubicFoot(double)"/>
        public static SpecificWeight KilopoundsForcePerCubicFoot(this double value) => (SpecificWeight)SpecificWeight.FromKilopoundsForcePerCubicFoot(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromKilopoundsForcePerCubicFoot(double)"/>
        public static SpecificWeight KilopoundsForcePerCubicFoot(this float value) => (SpecificWeight)SpecificWeight.FromKilopoundsForcePerCubicFoot(value);

        /// <inheritdoc cref="SpecificWeight.FromKilopoundsForcePerCubicFoot(double)"/>
        public static SpecificWeight KilopoundsForcePerCubicFoot(this decimal value) => (SpecificWeight)SpecificWeight.FromKilopoundsForcePerCubicFoot(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region KilopoundForcePerCubicInch

        /// <inheritdoc cref="SpecificWeight.FromKilopoundsForcePerCubicInch(double)"/>
        public static SpecificWeight KilopoundsForcePerCubicInch(this int value) => (SpecificWeight)SpecificWeight.FromKilopoundsForcePerCubicInch(value);
	
        /// <inheritdoc cref="SpecificWeight.FromKilopoundsForcePerCubicInch(double)"/>
        public static SpecificWeight KilopoundsForcePerCubicInch(this long value) => (SpecificWeight)SpecificWeight.FromKilopoundsForcePerCubicInch(value);

        /// <inheritdoc cref="SpecificWeight.FromKilopoundsForcePerCubicInch(double)"/>
        public static SpecificWeight KilopoundsForcePerCubicInch(this double value) => (SpecificWeight)SpecificWeight.FromKilopoundsForcePerCubicInch(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromKilopoundsForcePerCubicInch(double)"/>
        public static SpecificWeight KilopoundsForcePerCubicInch(this float value) => (SpecificWeight)SpecificWeight.FromKilopoundsForcePerCubicInch(value);

        /// <inheritdoc cref="SpecificWeight.FromKilopoundsForcePerCubicInch(double)"/>
        public static SpecificWeight KilopoundsForcePerCubicInch(this decimal value) => (SpecificWeight)SpecificWeight.FromKilopoundsForcePerCubicInch(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region NewtonPerCubicCentimeter

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicCentimeter(double)"/>
        public static SpecificWeight NewtonsPerCubicCentimeter(this int value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicCentimeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicCentimeter(double)"/>
        public static SpecificWeight NewtonsPerCubicCentimeter(this long value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicCentimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicCentimeter(double)"/>
        public static SpecificWeight NewtonsPerCubicCentimeter(this double value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicCentimeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicCentimeter(double)"/>
        public static SpecificWeight NewtonsPerCubicCentimeter(this float value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicCentimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicCentimeter(double)"/>
        public static SpecificWeight NewtonsPerCubicCentimeter(this decimal value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicCentimeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region NewtonPerCubicMeter

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicMeter(double)"/>
        public static SpecificWeight NewtonsPerCubicMeter(this int value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicMeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicMeter(double)"/>
        public static SpecificWeight NewtonsPerCubicMeter(this long value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicMeter(value);

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicMeter(double)"/>
        public static SpecificWeight NewtonsPerCubicMeter(this double value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicMeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicMeter(double)"/>
        public static SpecificWeight NewtonsPerCubicMeter(this float value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicMeter(value);

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicMeter(double)"/>
        public static SpecificWeight NewtonsPerCubicMeter(this decimal value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicMeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region NewtonPerCubicMillimeter

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicMillimeter(double)"/>
        public static SpecificWeight NewtonsPerCubicMillimeter(this int value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicMillimeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicMillimeter(double)"/>
        public static SpecificWeight NewtonsPerCubicMillimeter(this long value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicMillimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicMillimeter(double)"/>
        public static SpecificWeight NewtonsPerCubicMillimeter(this double value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicMillimeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicMillimeter(double)"/>
        public static SpecificWeight NewtonsPerCubicMillimeter(this float value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicMillimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromNewtonsPerCubicMillimeter(double)"/>
        public static SpecificWeight NewtonsPerCubicMillimeter(this decimal value) => (SpecificWeight)SpecificWeight.FromNewtonsPerCubicMillimeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region PoundForcePerCubicFoot

        /// <inheritdoc cref="SpecificWeight.FromPoundsForcePerCubicFoot(double)"/>
        public static SpecificWeight PoundsForcePerCubicFoot(this int value) => (SpecificWeight)SpecificWeight.FromPoundsForcePerCubicFoot(value);
	
        /// <inheritdoc cref="SpecificWeight.FromPoundsForcePerCubicFoot(double)"/>
        public static SpecificWeight PoundsForcePerCubicFoot(this long value) => (SpecificWeight)SpecificWeight.FromPoundsForcePerCubicFoot(value);

        /// <inheritdoc cref="SpecificWeight.FromPoundsForcePerCubicFoot(double)"/>
        public static SpecificWeight PoundsForcePerCubicFoot(this double value) => (SpecificWeight)SpecificWeight.FromPoundsForcePerCubicFoot(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromPoundsForcePerCubicFoot(double)"/>
        public static SpecificWeight PoundsForcePerCubicFoot(this float value) => (SpecificWeight)SpecificWeight.FromPoundsForcePerCubicFoot(value);

        /// <inheritdoc cref="SpecificWeight.FromPoundsForcePerCubicFoot(double)"/>
        public static SpecificWeight PoundsForcePerCubicFoot(this decimal value) => (SpecificWeight)SpecificWeight.FromPoundsForcePerCubicFoot(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region PoundForcePerCubicInch

        /// <inheritdoc cref="SpecificWeight.FromPoundsForcePerCubicInch(double)"/>
        public static SpecificWeight PoundsForcePerCubicInch(this int value) => (SpecificWeight)SpecificWeight.FromPoundsForcePerCubicInch(value);
	
        /// <inheritdoc cref="SpecificWeight.FromPoundsForcePerCubicInch(double)"/>
        public static SpecificWeight PoundsForcePerCubicInch(this long value) => (SpecificWeight)SpecificWeight.FromPoundsForcePerCubicInch(value);

        /// <inheritdoc cref="SpecificWeight.FromPoundsForcePerCubicInch(double)"/>
        public static SpecificWeight PoundsForcePerCubicInch(this double value) => (SpecificWeight)SpecificWeight.FromPoundsForcePerCubicInch(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromPoundsForcePerCubicInch(double)"/>
        public static SpecificWeight PoundsForcePerCubicInch(this float value) => (SpecificWeight)SpecificWeight.FromPoundsForcePerCubicInch(value);

        /// <inheritdoc cref="SpecificWeight.FromPoundsForcePerCubicInch(double)"/>
        public static SpecificWeight PoundsForcePerCubicInch(this decimal value) => (SpecificWeight)SpecificWeight.FromPoundsForcePerCubicInch(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region TonneForcePerCubicCentimeter

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicCentimeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicCentimeter(this int value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicCentimeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicCentimeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicCentimeter(this long value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicCentimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicCentimeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicCentimeter(this double value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicCentimeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicCentimeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicCentimeter(this float value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicCentimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicCentimeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicCentimeter(this decimal value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicCentimeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region TonneForcePerCubicMeter

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicMeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicMeter(this int value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicMeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicMeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicMeter(this long value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicMeter(value);

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicMeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicMeter(this double value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicMeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicMeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicMeter(this float value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicMeter(value);

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicMeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicMeter(this decimal value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicMeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

        #region TonneForcePerCubicMillimeter

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicMillimeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicMillimeter(this int value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicMillimeter(value);
	
        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicMillimeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicMillimeter(this long value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicMillimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicMillimeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicMillimeter(this double value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicMillimeter(new Number<double, DoubleCalculator>(value));

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicMillimeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicMillimeter(this float value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicMillimeter(value);

        /// <inheritdoc cref="SpecificWeight.FromTonnesForcePerCubicMillimeter(double)"/>
        public static SpecificWeight TonnesForcePerCubicMillimeter(this decimal value) => (SpecificWeight)SpecificWeight.FromTonnesForcePerCubicMillimeter(new Number<double, DoubleCalculator>(Decimal.ToDouble(value)));

        #endregion

    }
}
#endif
